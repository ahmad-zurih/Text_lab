Bootstrap: docker
From: nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

%post
    # Set non-interactive frontend for Debconf
    export DEBIAN_FRONTEND=noninteractive

    # Accept the EULA for installing ttf-mscorefonts-installer
    echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections

    # Update and upgrade system packages
    apt update && \
    apt upgrade -y && \
    apt install -y --no-install-recommends \
        build-essential curl ffmpeg git \
        libsndfile1-dev \
        libc6 libc-bin pciutils lshw libpq-dev \
        software-properties-common python3.10 python3-pip \
        poppler-utils ttf-mscorefonts-installer msttcorefonts fonts-crosextra-caladea fonts-crosextra-carlito gsfonts \
        lcdf-typetools

    # Upgrade pip and setuptools
    python3 -m pip install --no-cache-dir --upgrade pip setuptools

    # Remove blinker (if it conflicts)
    apt remove -y python3-blinker || true
    pip3 uninstall -y blinker || true

    # Install core Python packages
    python3 -m pip install --no-cache-dir \
        sentence-transformers \
        elevenlabs \
        streamlit \
        streamlit-cookies-manager \
        openai-whisper \
        scikit-learn \
        umap-learn \
        matplotlib \
        pandas \
        seaborn \
        mlflow \
        datasets \
        requests \
        soundfile \
        opencv-python-headless \
        scikit-image \
        ollama

    # Install Ollama system-wide
    curl -fsSL https://ollama.com/install.sh | sh

    # Remove any pre-installed Torch versions
    pip3 uninstall torch torchvision torchaudio -y

    # Install specific Torch/CUDA versions (matching CUDA 12.1 in base image)
    pip3 install torch==2.5.1 torchvision==0.20.1 torchaudio==2.5.1 \
      --index-url https://download.pytorch.org/whl/cu121

    # Clean up apt cache to reduce container size
    apt clean && rm -rf /var/lib/apt/lists/*

    # Installing anaconda
    curl https://repo.anaconda.com/archive/Anaconda3-2024.10-1-Linux-x86_64.sh --output anaconda.sh && \
        bash anaconda.sh -b -p /opt/anaconda && \
        rm anaconda.sh && \
        ln -s /opt/anaconda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
        echo ". /opt/anaconda/etc/profile.d/conda.sh" >> ~/.bashrc && \
        echo "conda activate $CONDA_ENV" >> ~/.bashrc

    export PATH="/opt/anaconda/bin:$PATH"

    conda create -n olmocr python=3.11
    conda activate olmocr

    git clone https://github.com/allenai/olmocr.git
    cd olmocr

    # For actually converting the files with your own GPU
    pip install -e .[gpu] --find-links https://flashinfer.ai/whl/cu124/torch2.4/flashinfer/